---
# Configure Db2 instance
# -----------------------------------------------------------------------------------------------------------------
db2wh_instance_name: "{{ lookup('env', 'DB2WH_INSTANCE_NAME') }}" # e.g. db2w-iot or db2w-manage
db2wh_dbname: "{{ lookup('env', 'DB2WH_DBNAME') | default('BLUDB', true) }}"
db2wh_version: "{{ lookup('env', 'DB2WH_VERSION') }}"

default_db2wh_version:
  cpd35: 11.5.5.1-cn3-x86_64
  cpd40: 11.5.7.0-cn2

db2wh_table_org: "{{ lookup('env', 'DB2WH_TABLE_ORG') | default('ROW', true) }}" # e.g ROW or COLUMN

db2wh_node_label: "{{ lookup('env', 'DB2WH_NODE_LABEL') | default(None, true) }}" # by default there is no node affinity/tolerations
db2wh_dedicated_node: "{{ lookup('env', 'DB2WH_DEDICATED_NODE') | default(None, true) }}" # by default there is no dedicated node
db2wh_workload: "{{ lookup('env', 'DB2WH_WORKLOAD') | default('ANALYTICS', true) }}" # default workload is ANALYTICS, other option is PUREDATA_OLAP

# Support DB2WH MPP configurations
db2wh_mln_count: "{{ lookup('env', 'DB2WH_MLN_COUNT') | default(1, true) }}" # by default only specify one logical node (i.e. one db partition)
db2wh_num_pods: "{{ lookup('env', 'DB2WH_NUM_PODS') | default(1, true) }}" # by default only specify one db2 pod

# Configure meta storage for db2 (CP4D v3.5 and v4.0)
db2wh_meta_storage_class: "{{ lookup('env', 'DB2WH_META_STORAGE_CLASS') }}"
db2wh_meta_storage_size_gb: "{{ lookup('env', 'DB2WH_META_STORAGE_SIZE_GB') | default('20Gi', true) }}"

# Configure CP4D user storage (CP4D v3.5 and v4.0)
db2wh_user_storage_class: "{{ lookup('env', 'DB2WH_USER_STORAGE_CLASS') }}"
db2wh_user_storage_size_gb: "{{ lookup('env', 'DB2WH_USER_STORAGE_SIZE_GB') | default('100Gi', true) }}"

# Configure CP4D backup storage (CP4D v3.5 and v4.0)
db2wh_backup_storage_class: "{{ lookup('env', 'DB2WH_BACKUP_STORAGE_CLASS') }}"
db2wh_backup_storage_size_gb: "{{ lookup('env', 'DB2WH_BACKUP_STORAGE_SIZE_GB') | default('100Gi, true) }}"

# Configure CP4D transaction logs storage (CP4D v4.0 only)
db2wh_logs_storage_class: "{{ lookup('env', 'DB2WH_LOGS_STORAGE_CLASS') }}"
db2wh_logs_storage_size_gb: "{{ lookup('env', 'DB2WH_LOGS_STORAGE_SIZE_GB') | default('100Gi', true) }}"

# Configure CP4D temporary storage (CP4D v4.0 only)
db2wh_temp_storage_class: "{{ lookup('env', 'DB2WH_TEMP_STORAGE_CLASS') }}"
db2wh_temp_storage_size_gb: "{{ lookup('env', 'DB2WH_TEMP_STORAGE_SIZE_GB') | default('100Gi', true) }}"


# MAS JdbcCfg generation settings
# -----------------------------------------------------------------------------------------------------------------
mas_instance_id: "{{ lookup('env', 'MAS_INSTANCE_ID') }}"
mas_config_dir: "{{ lookup('env', 'MAS_CONFIG_DIR') }}"

mas_config_scope: "{{ lookup('env', 'MAS_CONFIG_SCOPE') | default('system', true) }}" # Supported values are "system", "ws", "app", or "wsapp"
mas_workspace_id: "{{ lookup('env', 'MAS_WORKSPACE_ID') }}" # Necessary for ws and wsapp scopes
mas_application_id: "{{ lookup('env', 'MAS_APP_ID') }}" # Necessary for app and wsapp scopes


# CP4D V3.5 specific defaults
# -----------------------------------------------------------------------------------------------------------------
# Credentials used to call the CP4D API to create the Db2 instance, shockinging admin/password is the default
cpd_api_username: "{{ lookup('env', 'CPD_API_USER')  | default('admin', true) }}"
cpd_api_password: "{{ lookup('env', 'CPD_API_PASSWORD')  | default('password', true) }}"

# A temporary workaround for a bug in CP4D DB2, details in story 1372 & 1472, to be removed once the bug is fixed in CP4D (4.x version)
apply_db2u_sts_patch: true

# Default name for ConfigMap created by this automation role inside CP4D namespace
cpd_db_config_configmap_name: mas-automation-config


# CP4D V4.0 request/limit defaults
# -----------------------------------------------------------------------------------------------------------------
db2wh_cpu_requests: "{{ lookup('env', 'DB2WH_CPU_REQUESTS')  | default('2000m', true) }}"
db2wh_cpu_limits: "{{ lookup('env', 'DB2WH_CPU_LIMITS')  | default('4000m', true) }}"
db2wh_memory_requests: "{{ lookup('env', 'DB2WH_MEMORY_REQUESTS')  | default('6Gi', true) }}"
db2wh_memory_limits: "{{ lookup('env', 'DB2WH_MEMORY_LIMITS')  | default('12Gi', true) }}"
